#!/usr/bin/env python3
""" module docs """
import csv
import math
from typing import List


def index_range(page, page_size):
    """ Write a function named index_range """
    return ((page - 1) * page_size, page * page_size)


class Server:
    """Server class to paginate a database of popular baby names.
    """
    DATA_FILE = "Popular_Baby_Names.csv"

    def __init__(self):
        self.__dataset = None

    def dataset(self) -> List[List]:
        """Cached dataset
        """
        if self.__dataset is None:
            with open(self.DATA_FILE) as f:
                reader = csv.reader(f)
                dataset = [row for row in reader]
            self.__dataset = dataset[1:]

        return self.__dataset

    def get_page(self, page: int = 1, page_size: int = 10) -> List[List]:
        """ get data from cv file """
        assert isinstance(page, int) and page > 0, []
        assert isinstance(page_size, int) and page > 0, []
        start, end = index_range(page, page_size)
        dataset = self.dataset()
        if start >= len(dataset):
            return []
        return dataset[start:end]

    def get_hyper(self, page: int = 1, page_size: int = 10) -> dict:
        """ Hypermedia pagination """
        data = self.get_page(page, page_size)
        total_pages = len(self.dataset())
        next_page = page + 1 if total_pages > page else None
        prev_page = page - 1 if page - 1 > 0 else None
        return {"page_size": page_size, "page": page, "data": data,
                "next_page": next_page, "prev_page": prev_page, "total_pages": total_pages}
